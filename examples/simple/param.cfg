global:
{
  #Output prefix. Output will be in prefix_<node ID>.<fits/txt>
  prefix_out= "examples/simple/out";
  #Output format. Select HDF5, FITS or ASCII
  output_format= "FITS";
  #Output Gaussian overdensity field at z=0?
  output_density= true
  #Path to power spectrum at z=0. Power spectrum file must
  #be in CAMB format: k (h/Mpc), P(k) (Mpc/h)^3.
  pk_filename= "examples/simple/Pk_CAMB_test.dat"
  #This redshift range also defines the size of the box
  z_min= 0.001
  z_max= 0.450
  #RNG seed note that output will depend on number of nodes, etc not only
  #on the RNG seed
  seed= 1003
  #Set to true if you want to generate the theory prediction for the 3D power spectrum
  #of the different tracers.
  write_pred=false
  #Intervals of redshift at which the prediction will be produced.
  pred_dz=0.1
  #If write_pred is true, set this to true if you just want to generate the prediction
  #and then exit. This is also useful if you want to inspect the memory requirements
  #before a run.
  just_write_pred= true
}

field_par:
{
  #Extra Gaussian smoothing scale [Mpc/h] (set to a
  #negative value if you don't want any smoothing)
  r_smooth= 5.
  #Do you want to smooth the Newtonian potential as well?
  smooth_potential= true
  #Will use a Cartesian grid with n_grid^3 cells
  n_grid= 256
  #Density field type
  # 0-lognormal
  # 1-1LPT
  # 2-1LPT
  dens_type= 1
  #If dens_type==1 or 2, buffer size (fraction per particle)
  lpt_buffer_fraction= 0.6
  #If dens_type==1 or 2, scheme to interpolate particle
  #positions into a grid
  # 0-NGP
  # 1-CIC
  # 2-TSC
  lpt_interp_type= 1
  #Set to 1 if you want to output the LPT particle positions
  output_lpt= 0
}

cosmo_par:
{
  #Non-relativistic matter
  omega_M= 0.3
  #Dark energy
  omega_L= 0.7
  #Baryons
  omega_B= 0.05
  #Hubble parameter (in units of 100 km/s/Mpc)
  h= 0.7
  #Dark energy equation of state
  w= -1.0
  #Primordial scalar spectral index, used only to extrapolate
  #P(k) at low k end (-3 used at high k end)
  ns= 0.96
  #Power spectrum normalization. The input power spectrum will be
  #renormalized to this sigma8
  sigma_8= 0.803869
}

#For each galaxy population, create a section called srcsX, starting with X=1
srcs1:
{
  #Path to N(z) file. Should contain two columns
  # 1-> z, 2-> dN(z)/dz*dOmega
  # with dN/dzdOmega in units of deg^-2
  nz_filename= "examples/simple/Nz_test.txt"
  #Path to bias file. Should contain two columns
  # 1-> z, 2-> b(z)
  bias_filename= "examples/simple/Bz_test.txt"
  #Do you want to include shear ellipticities?
  include_shear= true
  #Do you want to store line-of-sight skewers for each object?
  store_skewers= true
  #You can also store the Gaussian density field (instead of the non-Gaussian one)
  #This is false by default.
  gaussian_skewers= false
}

srcs2:
{
  nz_filename= "examples/simple/Nz2_test.txt"
  bias_filename= "examples/simple/Bz2_test.txt"
  include_shear= false
  store_skewers= true
}

#For each intensity mapping species, create a section called imapX,
#starting with X=1
imap1:
{
  #Tabulated background temperature as a function of redshift
  tbak_filename= "examples/simple/Tz_test.txt"
  #Tabulated linear bias as a function of redshift
  bias_filename= "examples/simple/Bz_test.txt"
  #Frequency bands in which to output maps. Should contain 2 columns:
  # 1-> nu_ini, 2-> nu_end
  freq_list= "examples/simple/nuTable.txt"
  #Rest-frame frequency of this species (in the same units as the
  #frequencies in freq_list).
  freq_rest= 1420.405
  #HEALPix resolution parameter.
  nside= 64
}

#Include a section entitled kappa if you want to generate maps
#of the lensing convergence at specific redshifts.
kappa:
{
  #Redshifts at which maps should be generated
  z_out= [0.4]
  nside= 64
}

#Include a section entitled isw if you want to generate maps
#of the ISW effect (time derivative of the gravitational potential).
isw:
{
  z_out= [0.4]
  nside= 64
}
